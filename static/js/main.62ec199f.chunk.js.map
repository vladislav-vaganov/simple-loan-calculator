{"version":3,"sources":["LoanCalculator.jsx","utils.js","constants.js","index.js"],"names":["annualPeriodOptions","from","to","options","i","push","name","value","getAnnualPeriodOptions","LoanCalculator","props","getOnInputChange","propertyName","e","target","validity","setState","valid","NaN","onPeriodChange","periodInMonths","state","loanAmountInputValue","loanAmount","downPaymentInputValue","downPayment","interestRate","onLoanAmountChange","onDownPaymentChange","this","monthlyPayment","interest","Math","pow","calculateMonthlyPayment","className","htmlFor","type","min","step","onChange","required","max","readOnly","disabled","map","key","isNaN","round","PureComponent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAKMA,G,MCHgC,SAACC,EAAMC,GAG3C,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,IAC1BD,EAAQE,KAAK,CAAEC,KAAMF,EAAGG,MCFE,GDEKH,IAGjC,OAAOD,EDJmBK,CAAuB,EAAG,IAEzCC,EAAb,kDACE,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IAkBRC,iBAAmB,SAACC,GAAD,OAAkB,SAACC,GAAO,IAAD,IACdA,EAAEC,OAAtBP,EADkC,EAClCA,MAAOQ,EAD2B,EAC3BA,SAEf,EAAKC,UAAL,mBACGJ,EAAeG,EAASE,OAASV,EAAQW,KAD5C,wBAEMN,EAFN,cAEiCL,GAFjC,MAtBiB,EA4BnBY,eAAiB,SAACN,GAAO,IACfN,EAAUM,EAAEC,OAAZP,MACR,EAAKS,SAAS,CAAEI,eAAgBb,KA9Bf,IAIFa,EAJE,YAGWpB,EAHX,MAITO,MAJS,OAMjB,EAAKc,MAAQ,CACXC,qBAAsB,IACtBC,WAAY,EACZC,sBAAuB,IACvBC,YAAa,EACbC,aEjBuB,IFkBvBN,kBAGF,EAAKO,mBAAqB,EAAKhB,iBAAiB,cAChD,EAAKiB,oBAAsB,EAAKjB,iBAAiB,eAhBhC,EADrB,qDAkCY,IAAD,EAQHkB,KAAKR,MANPE,EAFK,EAELA,WACAD,EAHK,EAGLA,qBACAG,EAJK,EAILA,YACAD,EALK,EAKLA,sBACAE,EANK,EAMLA,aACAN,EAPK,EAOLA,eAEIU,ECtC6B,SAACP,EAAYE,EAAaC,EAAcN,GAC7E,IAAMW,EAAWL,EAAe,IAGhC,OAFeH,GAAc,EAAIE,EAAc,KAE9BM,GAAa,EAAIC,KAAKC,IAAI,GAAK,EAAIF,GAAWX,IDkCtCc,CACrBX,EACAE,EACAC,EACAN,GAGF,OACE,yBAAKe,UAAU,mBACb,+CAEA,yBAAKA,UAAU,0BACb,2BAAOC,QAAQ,mBAAf,iBACA,2BACE9B,KAAK,kBACL+B,KAAK,SACLC,IAAK,EACLC,KAAK,MACLhC,MAAOe,EACPkB,SAAUX,KAAKF,mBACfc,UAAQ,IAEV,kCExEc,MF2EhB,yBAAKN,UAAU,0BACb,2BAAOC,QAAQ,oBAAf,kBACA,2BACE9B,KAAK,mBACL+B,KAAK,SACLC,IAAK,EACLI,IAAK,IACLH,KAAK,MACLhC,MAAOiB,EACPgB,SAAUX,KAAKD,oBACfa,UAAQ,IAEV,qCAGF,yBAAKN,UAAU,0BACb,2BAAOC,QAAQ,iBAAf,mBACA,2BAAO9B,KAAK,gBAAgB+B,KAAK,SAAS9B,MAAOmB,EAAciB,UAAQ,EAACC,UAAQ,IAChF,qCAGF,yBAAKT,UAAU,0BACb,2BAAOC,QAAQ,gBAAf,YACA,4BAAQ9B,KAAK,eAAeC,MAAOa,EAAgBoB,SAAUX,KAAKV,gBAC/DnB,EAAoB6C,KAAI,gBAAGvC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACvB,4BAAQuC,IAAKvC,EAAOA,MAAOA,GACxBD,OAIP,yCAGF,yBAAK6B,UAAU,2BACb,mDACA,qCAAOY,MAAMjB,GAAkB,MAAQE,KAAKgB,MAAMlB,GAAlD,YE9Gc,YFOxB,GAAoCmB,iBGFpCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.62ec199f.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport './LoanCalculator.css';\r\nimport { CURRENCY, INTEREST_RATE } from './constants';\r\nimport { getAnnualPeriodOptions, calculateMonthlyPayment } from './utils';\r\n\r\nconst annualPeriodOptions = getAnnualPeriodOptions(1, 6);\r\n\r\nexport class LoanCalculator extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const [firstPeriodOption] = annualPeriodOptions;\r\n    const { value: periodInMonths } = firstPeriodOption;\r\n\r\n    this.state = {\r\n      loanAmountInputValue: '0',\r\n      loanAmount: 0,\r\n      downPaymentInputValue: '0',\r\n      downPayment: 0,\r\n      interestRate: INTEREST_RATE,\r\n      periodInMonths,\r\n    };\r\n\r\n    this.onLoanAmountChange = this.getOnInputChange('loanAmount');\r\n    this.onDownPaymentChange = this.getOnInputChange('downPayment');\r\n  }\r\n\r\n  getOnInputChange = (propertyName) => (e) => {\r\n    const { value, validity } = e.target;\r\n\r\n    this.setState({\r\n      [propertyName]: validity.valid ? +value : NaN,\r\n      [`${propertyName}InputValue`]: value,\r\n    });\r\n  };\r\n\r\n  onPeriodChange = (e) => {\r\n    const { value } = e.target;\r\n    this.setState({ periodInMonths: value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      loanAmount,\r\n      loanAmountInputValue,\r\n      downPayment,\r\n      downPaymentInputValue,\r\n      interestRate,\r\n      periodInMonths,\r\n    } = this.state;\r\n    const monthlyPayment = calculateMonthlyPayment(\r\n      loanAmount,\r\n      downPayment,\r\n      interestRate,\r\n      periodInMonths\r\n    );\r\n\r\n    return (\r\n      <div className=\"loan-calculator\">\r\n        <h1>Loan Calculator</h1>\r\n\r\n        <div className=\"loan-calculator__field\">\r\n          <label htmlFor=\"loanAmountInput\">Loan Amount: </label>\r\n          <input\r\n            name=\"loanAmountInput\"\r\n            type=\"number\"\r\n            min={0}\r\n            step=\"any\"\r\n            value={loanAmountInputValue}\r\n            onChange={this.onLoanAmountChange}\r\n            required\r\n          />\r\n          <span> {CURRENCY}</span>\r\n        </div>\r\n\r\n        <div className=\"loan-calculator__field\">\r\n          <label htmlFor=\"downPaymentInput\">Down Payment: </label>\r\n          <input\r\n            name=\"downPaymentInput\"\r\n            type=\"number\"\r\n            min={0}\r\n            max={100}\r\n            step=\"any\"\r\n            value={downPaymentInputValue}\r\n            onChange={this.onDownPaymentChange}\r\n            required\r\n          />\r\n          <span> %</span>\r\n        </div>\r\n\r\n        <div className=\"loan-calculator__field\">\r\n          <label htmlFor=\"interestInput\">Interest Rate: </label>\r\n          <input name=\"interestInput\" type=\"number\" value={interestRate} readOnly disabled />\r\n          <span> %</span>\r\n        </div>\r\n\r\n        <div className=\"loan-calculator__field\">\r\n          <label htmlFor=\"periodSelect\">Period: </label>\r\n          <select name=\"periodSelect\" value={periodInMonths} onChange={this.onPeriodChange}>\r\n            {annualPeriodOptions.map(({ name, value }) => (\r\n              <option key={value} value={value}>\r\n                {name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <span> years</span>\r\n        </div>\r\n\r\n        <div className=\"loan-calculator__result\">\r\n          <span>Monthly Payment: </span>\r\n          <b>{`${isNaN(monthlyPayment) ? '---' : Math.round(monthlyPayment)} ${CURRENCY}`}</b>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { MONTHS_IN_YEAR } from './constants';\r\n\r\nexport const getAnnualPeriodOptions = (from, to) => {\r\n  const options = [];\r\n\r\n  for (let i = from; i <= to; i++) {\r\n    options.push({ name: i, value: i * MONTHS_IN_YEAR });\r\n  }\r\n\r\n  return options;\r\n};\r\n\r\nexport const calculateMonthlyPayment = (loanAmount, downPayment, interestRate, periodInMonths) => {\r\n  const interest = interestRate / 100;\r\n  const amount = loanAmount * (1 - downPayment / 100);\r\n\r\n  return (amount * interest) / (1 - Math.pow(1 / (1 + interest), periodInMonths));\r\n};\r\n","export const CURRENCY = '$';\r\n\r\nexport const INTEREST_RATE = 1.5;\r\n\r\nexport const MONTHS_IN_YEAR = 12;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { LoanCalculator } from './LoanCalculator';\n\nReactDOM.render(\n  <React.StrictMode>\n    <LoanCalculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}